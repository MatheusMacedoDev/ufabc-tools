# External imports

from beaupy import select
from rich.console import Console
from rich import print


console = Console()

def print_ufabc_logo():
    print('''
‚ñà‚ñë‚ñà ‚ñà‚ñÄ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÑ‚ñÑ ‚ñà‚ñÄ‚ñÄ
‚ñà‚ñÑ‚ñà ‚ñà‚ñÄ‚ñë ‚ñà‚ñÄ‚ñà ‚ñà‚ñÑ‚ñà ‚ñà‚ñÑ‚ñÑ
    ''')


def print_start_decoration():
    print('''
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚°Ä‚†Ä‚†Ä‚£†‚¢∂‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£Ä‚°§‚£æ‚†Ä‚†ì‚†í‚†ö‚†õ‚£á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚£º‚†±‚°•‚£¨‚£ß‚†Ä‚¢Ä‚°Ä‚£Ä‚†à‚¢∑‚†Ä‚†Ä
‚†Ä‚†Ä‚†à‚†≥‚¢ß‚†º‚†å‚†Ä‚†à‚†Å‚†â‚¢ê‚†õ‚†Ä‚†Ä
‚¢†‚°¥‚†¶‚†§‚†¨‚°ó‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢¶‚†Ä‚†Ä
‚†ò‚£Ñ‚†à‚†ô‚£≤‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ì‚£¶
‚†Ä‚†Å‚†ô‚†Ç‚°â‚°á‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚¢∏‚†â‚†â
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°Ñ‚†Ä‚°å‚†Ä‚†±‚£Ñ‚¢∏‚†Ä‚†Ä

‚ñà‚ñë‚ñà ‚ñà‚ñÄ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÑ‚ñÑ ‚ñà‚ñÄ‚ñÄ
‚ñà‚ñÑ‚ñà ‚ñà‚ñÄ‚ñë ‚ñà‚ñÄ‚ñà ‚ñà‚ñÑ‚ñà ‚ñà‚ñÑ‚ñÑ

(Por: Matheus Macedo)
    ''')


def select_input(options_list, description):
    options_list.append('[yellow]N√£o filtrar[/yellow]')

    print_ufabc_logo()
    print(f'[cyan]{description}[/cyan]\n')

    selected_item = select(options_list, cursor='ü¢ß')

    console.clear()

    if selected_item == '[yellow]N√£o filtrar[/yellow]':
        return ['', True]

    return [selected_item, False]


def filter_classes_by_turn(dataframe):
    turns = [
        'Matutino',
        'Noturno',
    ]

    [selected_turn, is_filter_empty] = select_input(turns, 'Selecione o turno:')

    if is_filter_empty:
        return dataframe


    dataframe = dataframe[dataframe.Turno == selected_turn]

    return dataframe


def filter_classes_by_campus(dataframe):
    campus = [
        'SA',
        'SB',
    ]

    [selected_campus, is_filter_empty] = select_input(campus, 'Selecione o campus:')

    if is_filter_empty:
        return dataframe

    dataframe = dataframe[dataframe.Campus == selected_campus]

    return dataframe


def filter_classes_by_course(dataframe):
    courses = list(dataframe['Curso'].unique().tolist())

    [selected_course, is_filter_empty] = select_input(courses, 'Selecione o curso:')

    if is_filter_empty:
        return dataframe

    dataframe = dataframe[dataframe.Curso == selected_course]

    return dataframe


def filter_classes_by_subject(dataframe):
    subjects = list(dataframe['Mat√©ria'].unique().tolist())

    [selected_subject, is_filter_empty] = select_input(subjects, 'Selecione a mat√©ria:')

    if is_filter_empty:
        return dataframe

    dataframe = dataframe[dataframe['Mat√©ria'] == selected_subject]

    return dataframe